#version 410 core

in vec2 textureCoordinate;
in vec3 normal;
in vec3 fragPos;

out vec3 color;

uniform sampler2D textureSampler;

float ambientLight = 0.1;
vec3 lightPosition = vec3(5, 0, -5);
vec3 lightColor = vec3(1, 1, 1);

void main(){
    vec3 norm = normalize(normal);
    vec3 lightDir = normalize(lightPosition - fragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;

    color = texture(textureSampler, textureCoordinate).rgb * (diffuse + ambientLight);
}